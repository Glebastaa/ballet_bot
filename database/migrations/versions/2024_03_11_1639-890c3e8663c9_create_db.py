"""create_db

Revision ID: 890c3e8663c9
Revises: 
Create Date: 2024-03-11 16:39:49.012629

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '890c3e8663c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_students'))
    )
    op.create_table('studios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_studios')),
    sa.UniqueConstraint('name', name=op.f('uq_studios_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('role', sa.Enum('VISITOR', 'STUDENT', 'TEACHER', 'OWNER', name='userroles'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('id', name=op.f('uq_users_id')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_individual', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('studio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['studio_id'], ['studios.id'], name=op.f('fk_groups_studio_id_studios')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups')),
    sa.UniqueConstraint('name', 'studio_id', 'is_individual', name=op.f('uq_groups_name'))
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('studio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['studio_id'], ['studios.id'], name=op.f('fk_rooms_studio_id_studios')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms')),
    sa.UniqueConstraint('name', 'studio_id', name=op.f('uq_rooms_name'))
    )
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('start_date', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='weekdays'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_schedules_group_id_groups')),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_schedules_room_id_rooms')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedules'))
    )
    op.create_table('student_group_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_student_group_association_group_id_groups'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_student_group_association_student_id_students'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_student_group_association')),
    sa.UniqueConstraint('group_id', 'student_id', name=op.f('uq_student_group_association_group_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_group_association')
    op.drop_table('schedules')
    op.drop_table('rooms')
    op.drop_table('groups')
    op.drop_table('users')
    op.drop_table('studios')
    op.drop_table('students')
    # ### end Alembic commands ###
